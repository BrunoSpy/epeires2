<?php $this->headScript()->appendFile($this->basePath() . '/js/stupidtable.min.js');
      $this->headScript()->appendFile($this->basePath() . '/assets/js/tabs.js');
?>

<div class="container-fluid">
    <div class="row-fluid">
	<div class="span9">
		<div class="block">
			<div class="navbar navbar-inner block-header">
				<div class="muted pull-left">Onglets </div>
			</div>
			<div class="block-content collapse in">
				<div class="span12">
				<table class="table table-striped sortable">
                                    <thead>
                                    <tr>
                                        <th>id</th>
                                        <th data-sort="string">Nom</th>
                                        <th>Nom court</th>
                                        <th>Catégories associées</th>
                                        <th>Rôles autorisés</th>
                                        <th>Catégories racines seulement</th>
                                        <th><a class="btn btn-mini" href="#tab-container" data-toggle="modal" id="add-tab">Ajouter</a></th>
                                    </tr>
                                    </thead>
                                    <tbody>
                                        <?php 
                                        function sortTabs($a, $b){
                                        	if($a->getParent() !== null && $b->getParent() !== null) {
                                        		if($a->getParent()->getId() === $b->getParent()->getId()) {
                                        			return $a->getPlace() - $b->getPlace();
                                        		} else {
                                        			return $a->getParent()->getPlace() - $b->getParent()->getPlace();
                                        		}
                                        	} else if($a->getParent() !== null && $b->getParent() == null) {
                                        		if($a->getParent()->getId() === $b->getId()){
                                        			return 1;
                                        		} else {
                                        			return $a->getParent()->getPlace() - $b->getPlace();
                                        		}
                                        	} else if($a->getParent() == null && $b->getParent() !== null) {
                                        		if($b->getParent()->getId() === $a->getId()){
                                        			return -1;
                                        		} else {
                                        			return $a->getPlace() - $b->getParent()->getPlace();
                                        		}
                                        	} else if($a->getParent() == null && $b->getParent() == null){
                                        		return $a->getPlace() - $b->getPlace();
                                        	}
                                        }
                                        foreach ($this->tabs as $tab){
                                            echo '<tr>';
                                            echo '<td>'.$tab->getId().'</td>';
                                            echo '<td>'.$tab->getName().'</td>';
                                            echo '<td>'.$tab->getShortname().'</td>';
                                            echo '<td>';
                                            $tabsArray = $tab->getCategories()->toArray();
                                            uasort($tabsArray, "sortTabs");
                                            foreach ($tabsArray as $cat){
                                            	if($cat->getParent() !== null){
                                            		echo ' > ';
                                            	}
                                            	echo $cat->getName().'<br/>';
                                            }
                                            echo '</td>';
                                            echo '<td>';
                                            foreach ($tab->getReadroles() as $role){
                                            	echo $role->getName().'<br/>';
                                            }
                                            echo '</td>';
                                            echo '<td><i class="'.($tab->isOnlyroot() ? 'icon-ok' : 'icon-remove' ).'"></i></td>';
                                            echo '<td><a '
                                                    . 'href="#tab-container" '
                                                    . 'class="mod-tab" '
                                                    . 'data-id="'.$tab->getId().'" '
                                                    . 'data-name="'.$tab->getName().'" '
                                                    . 'title="Modifier" '
                                                    . 'data-toggle="modal"><i class="icon-pencil"></i></a>';
                                            echo ' <a '
                                            		. 'href="#tab-rm-container" '
                                            		. 'class="rm-tab" '
                                            		. 'data-id="'.$tab->getId().'" '
                                                    . 'data-name="'.$tab->getName().'" '
                                                    . 'title="Supprimer" '
                                                    . 'data-toggle="modal"><i class="icon-trash"></i></a>';
                                            echo '</td>';
                                            echo '</tr>';
                                        }
                                        ?>
                                    </tbody>
                                </table>
				</div>
			</div>
		</div>
	</div>
        <div class="span3">
            <div class="block">
                <div class="navbar navbar-inner block-header">
                    <div class="muted pull-left">Aide</div>
                </div>
                <div class="block-content collapse in">
                    <p>Cette page permet de configurer de nouveaux onglets, positionnés après les onglets Radio et Radar.</p>
                    <p>Il est nécessaire de créer au préalable les catégories via <a href="<?php echo $this->url('administration', array('controller' => 'categories', 'action' => 'index'))?>">la page de configuration des catégories</a>.</p>
                </div>
            </div>
        </div>
    </div>

</div>

			
<?php echo $this->modalwindow("tab-container", "<h3 id=\"tab-title\"></h3>", "", "<div id=\"tab-form\"></div>") ?>

<?php echo $this->modalwindow("tab-rm-container",
						"<h3>Confirmer la suppression ?</h3>",
						"", 
						null, 
						"<p>Voulez-vous vraiment supprimer l'onglet <em><span id=\"tab-name\"></span></em> ?</p>",
						"<a class=\"btn btn-danger\" id=\"delete-tab-href\">Confirmer</a>
						<a class=\"btn\" href=\"#\" data-dismiss=\"modal\" aria-hidden=\"true\">Annuler</a>") ?>

<?php $this->inlineScript()->captureStart();?>

tab('<?php echo $this->url('administration'); ?>');

$(".sortable").stupidtable();

$(".sortable").bind('aftertablesort', function(event, data){
	var th = $(this).find("th");
    th.find(".arrow").remove();
    var arrow = data.direction === "asc" ? "<i class=\"icon-arrow-down\"></i>" : "<i class=\"icon-arrow-up\"></i>";
    th.eq(data.column).append('<span class="arrow"> ' + arrow +'</span>');
});

$("table th:eq(1)").trigger('click');

<?php echo $this->notifications($this->messages); ?>
                                        
<?php $this->inlineScript()->captureEnd();?>
