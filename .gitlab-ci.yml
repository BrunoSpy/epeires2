stages:
  - test
  - build_image
cache:
  paths:
  - vendor/

before_script:
#use proxy cache
- export http_proxy=http://10.196.32.91:3142
#install git and unzip for composer, libmcrypt for php-mcrypt
- apt-get update && apt-get install -qqy git unzip libmcrypt-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libxml2-dev libicu-dev icu-devtools zlib1g-dev libssl-dev
#ajout xvfb for selenium
- apt-get install -qqy xvfb wget firefox-esr
- mkdir -p /usr/share/man/man1 #fix issue with debian-stretch-slim
- apt-get install -qqy default-jre
#stop using proxy cache, unless you want composer to crash
- export http_proxy=""
- export https_proxy=""
# Setup Selenium
- export DISPLAY=:99
- Xvfb :99 &
- sleep 3
- wget -O selenium.jar https://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar
# WARNING - Takes a long time to start up. Php extensions compilation time should assure us that it's launched correctly
- java -jar selenium.jar -port 4444 >/dev/null 2>&1 &
#install needed php extensions
- docker-php-ext-install -j$(nproc) iconv $MCRYPT soap intl pdo_mysql zip bcmath
- docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
- docker-php-ext-install -j$(nproc) gd
#install xdebug for codeception
- pecl install $XDEBUG
- docker-php-ext-enable xdebug
#configure date.timezone
- echo "date.timezone=Europe/Paris" > /usr/local/etc/php/conf.d/date_timezone.ini
#download composer
- curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#parallelize downloads
- composer global require --optimize-autoloader "hirak/prestissimo"
- composer install --no-interaction --prefer-dist
#configure database
- cp $DOCTRINE config/autoload/doctrine.local.php
#populate database
- php public/index.php migrations:migrate --no-interaction -vvv
- php public/index.php orm:generate-proxies
- php public/index.php initDB
- php public/index.php data-fixture:import --no-interaction --append
- chmod a+rwx -Rf ./data
#launch server
- cp -f tests/build/vhost.conf /etc/apache2/sites-enabled/
- sed -e "s?%BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-enabled/vhost.conf
- echo ServerName localhost >> /etc/apache2/apache2.conf
- rm /etc/apache2/sites-enabled/000-default.conf
- a2enmod rewrite
- service apache2 restart
  # Make sure Webdriver is running
- curl http://localhost:4444/wd/hub/status
  #Make sure webserver is running
- curl http://localhost/events/testAuthentication
- apache2ctl -S

variables:
  MYSQL_DATABASE: epeires2
  MYSQL_ROOT_PASSWORD: epeires2
  APP_ENV: development
  TIMEZONE: "Europe/Paris"

test:7.0-mariadb:
  image: php:7.0-apache
  services:
  - mariadb:latest
  variables:
    MCRYPT: "mcrypt"
    XDEBUG: "xdebug"
    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mariadb.php"
  script:
  - php vendor/bin/codecept run acceptance
  - php vendor/bin/codecept run unit --coverage-text --no-colors

test:7.0-mysql:
  image: php:7.0-apache
  stage: test
  services:
  - mysql:latest
  variables:
    MCRYPT: "mcrypt"
    XDEBUG: "xdebug"
    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mysql.php"
  script:
  - php vendor/bin/codecept run acceptance
  - php vendor/bin/codecept run unit --coverage-text --no-colors

test:7.1-mariadb:
  image: php:7.1-apache
  stage: test
  services:
  - mariadb:latest
  variables:
    MCRYPT: "mcrypt"
    XDEBUG: "xdebug"
    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mariadb.php"
  script:
  - php vendor/bin/codecept run acceptance
  - php vendor/bin/codecept run unit --coverage-text --no-colors

test:7.1-mysql:
  image: php:7.1-apache
  stage: test
  services:
  - mysql:latest
  variables:
    MCRYPT: "mcrypt"
    XDEBUG: "xdebug"
    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mysql.php"
  script:
  - php vendor/bin/codecept run acceptance
  - php vendor/bin/codecept run unit --coverage-text --no-colors

#test:7.2:
#  image: php:7.2-apache
#  stage: test
#  allow_failure: true
#  services:
#  - mariadb:latest
#  variables:
#    MCRYPT: ""
#    XDEBUG: "xdebug"
#    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mariadb.php"
#  script:
#  - php vendor/bin/codecept run acceptance
#  - php vendor/bin/codecept run unit --coverage-text --no-colors

test:docker:
  image: php:7.1.14-apache-jessie
  stage: test
  services:
  - mariadb:10.2.13
  variables:
    MCRYPT: "mcrypt"
    XDEBUG: "xdebug"
    DOCTRINE: "config/autoload/doctrine.gitlab-ci.mariadb.php"
  script:
  - php vendor/bin/codecept run acceptance
  - php vendor/bin/codecept run unit --coverage-text --no-colors

docker_images:
  before_script:
    - echo 'Short circuit global before_script'
  stage: build_image
  image: docker:git
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
